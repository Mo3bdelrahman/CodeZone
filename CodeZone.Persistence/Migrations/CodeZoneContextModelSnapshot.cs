// <auto-generated />
using CodeZone.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeZone.Persistence.Migrations
{
    [DbContext(typeof(CodeZoneContext))]
    partial class CodeZoneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeZone.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "images/items/item_1.png",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Image = "images/items/item_2.png",
                            Name = "Banana"
                        },
                        new
                        {
                            Id = 3,
                            Image = "images/items/item_3.png",
                            Name = "Cherry"
                        },
                        new
                        {
                            Id = 4,
                            Image = "images/items/item_4.png",
                            Name = "Date"
                        },
                        new
                        {
                            Id = 5,
                            Image = "images/items/item_5.png",
                            Name = "Elderberry"
                        },
                        new
                        {
                            Id = 6,
                            Image = "images/items/item_6.png",
                            Name = "Fig"
                        },
                        new
                        {
                            Id = 7,
                            Image = "images/items/item_7.png",
                            Name = "Grape"
                        },
                        new
                        {
                            Id = 8,
                            Image = "images/items/item_8.png",
                            Name = "Honeydew"
                        });
                });

            modelBuilder.Entity("CodeZone.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alexandria"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Giza"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Suez"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mansoura"
                        });
                });

            modelBuilder.Entity("CodeZone.Domain.Entities.StoreItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoresItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            StoreId = 1,
                            Quantity = 10
                        },
                        new
                        {
                            ItemId = 1,
                            StoreId = 3,
                            Quantity = 9
                        },
                        new
                        {
                            ItemId = 2,
                            StoreId = 2,
                            Quantity = 43
                        },
                        new
                        {
                            ItemId = 3,
                            StoreId = 2,
                            Quantity = 30
                        },
                        new
                        {
                            ItemId = 3,
                            StoreId = 5,
                            Quantity = 7
                        },
                        new
                        {
                            ItemId = 3,
                            StoreId = 1,
                            Quantity = 16
                        },
                        new
                        {
                            ItemId = 4,
                            StoreId = 3,
                            Quantity = 40
                        },
                        new
                        {
                            ItemId = 4,
                            StoreId = 5,
                            Quantity = 81
                        },
                        new
                        {
                            ItemId = 5,
                            StoreId = 2,
                            Quantity = 66
                        },
                        new
                        {
                            ItemId = 5,
                            StoreId = 5,
                            Quantity = 32
                        },
                        new
                        {
                            ItemId = 6,
                            StoreId = 2,
                            Quantity = 60
                        },
                        new
                        {
                            ItemId = 6,
                            StoreId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            ItemId = 7,
                            StoreId = 1,
                            Quantity = 45
                        },
                        new
                        {
                            ItemId = 8,
                            StoreId = 1,
                            Quantity = 54
                        });
                });

            modelBuilder.Entity("CodeZone.Domain.Entities.StoreItem", b =>
                {
                    b.HasOne("CodeZone.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeZone.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Store");
                });
#pragma warning restore 612, 618
        }
    }
}
